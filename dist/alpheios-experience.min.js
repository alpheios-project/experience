!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){var n=r(4),o=r(2);e.exports=function(e,t,r){var s=t&&r||0;"string"==typeof e&&(t="binary"==e?new Array(16):null,e=null);var i=(e=e||{}).random||(e.rng||n)();if(i[6]=15&i[6]|64,i[8]=63&i[8]|128,t)for(var c=0;c<16;++c)t[s+c]=i[c];return t||o(i)}},function(e,t,r){"use strict";r.r(t);class n{constructor(e){this.description=e,this.startTime=void 0,this.endTime=void 0,this.details=[]}static readObject(e){let t=new n(e.description);e.startTime&&(t.startTime=e.startTime),e.endTime&&(t.endTime=e.endTime);for(let r of e.details)t.details.push(n.readObject(r));return t}attach(e){this.details.push(e)}start(){return this.startTime=(new Date).getTime(),this}complete(){return this.endTime=(new Date).getTime(),this}get duration(){return this.endTime-this.startTime}toString(){return`"${this.description}" experience duration is ${this.duration} ms`}}var o=r(0),s=r.n(o);class i{static get defaults(){return{prefix:"experience_"}}static write(e){let t=`${i.defaults.prefix}${s()()}`;browser.storage.local.set({[t]:e}).then(()=>{console.log("Experience has been written to the local storage successfully")},e=>{console.error(`Cannot write experience to the local storage because of the following error: ${e}`)})}static async readAll(){try{return await browser.storage.local.get()}catch(e){return console.error(`Cannot read data from the local storage because of the following error: ${e}`),e}}static async remove(e){return browser.storage.local.remove(e)}}class c{constructor(e){if(this.monitored=new Map,e)for(let t of e)this.monitored.set(t.monitoredFunction,t)}static track(e,t){return new Proxy(e,new c(t))}get(e,t,r){if(this.monitored.has(t)){let r=this.monitored.get(t);if(r.hasOwnProperty("asyncWrapper"))return c.asyncWrapper.call(this,e,t,r.asyncWrapper,r);console.error("Only async wrappers are supported by monitor")}return e[t]}monitor(e,t){this.monitored.set(e,t)}static syncWrapper(e,t,r){console.log(`${t}() sync method has been called`);const n=e[t];return function(...e){let o=n.apply(this,e);return console.log(`${t}() sync method has been completed`),r.complete(),console.log(`${r}`),o}}static asyncWrapper(e,t,r,n){return console.log(`${t}() async method has been requested`),async function(...o){try{return await r(this,e,t,o,n,i)}catch(e){throw console.error(`${t}() failed: ${e.value}`),e}}}static async recordExperience(e,t,r,o,s,i){let c=new n(s.experience);console.log(`${r}() async method has been called`),o.push(c);let a=await t[r].apply(e,o);return(c=a.state).complete(),console.log(`${r}() completed with success, experience is:`,c),i.write(c),a}static async recordExperienceDetails(e,t,r,o,s){let i=new n(s.experience);console.log(`${r}() async method has been called`);let c=await t[r].apply(e,o);return i.complete(),c.state.attach(i),console.log(`${r}() completed with success, experience is: ${i}`),c}static async attachToMessage(e,t,r,n){console.log(`${r}() async method has been called`),n[0].experience=n[n.length-1];let o=await t[r].apply(e,n);return console.log(`${r}() completed with success`),o}static async detachFromMessage(e,t,r,o){console.log(`${r}() async method has been called`),o[0].experience?o.push(n.readObject(o[0].experience)):console.warn("This message has no experience data attached. Experience data will not be recorded");let s=await t[r].apply(e,o);return console.log(`${r}() completed with success`),s}}const a={START:Symbol("Experience start"),STOP:Symbol("Experience stop")},l={CONSTRUCT:Symbol("Construct"),GET:Symbol("Get"),SET:Symbol("Set")};class u{constructor(e={}){this.experienceDescription="";for(let e of Object.values(u.events))this[e]=[];if(e&&(e.experience&&(this.experienceDescription=e.experience),e.actions))for(const t of e.actions)this[t.event].push(t)}static get actions(){return a}static get events(){return l}static track(e,t){return new Proxy(e,new u(t))}get(e,t){for(let e of this[u.events.GET])e.name===t&&this.experienceAction(e);return e[t]}set(e,t,r){for(let e of this[u.events.SET])e.name===t&&this.experienceAction(e);return e[t]=r,!0}experienceAction(e){e.action===u.actions.START?(this.experience=new n(this.experienceDescription).start(),console.log("Experience started")):e.action===u.actions.STOP&&(this.experience.complete(),console.log("Experience completed:",this.experience),i.write(this.experience))}}class p{constructor(e,t,r,n){this.localStorage=e,this.remoteStorage=t,this.qtyThreshold=r,window.setInterval(this.checkExperienceStorage.bind(this),n)}async checkExperienceStorage(){console.log("Experience storage check");let e=await this.localStorage.readAll();Object.keys(e).filter(e=>0===e.indexOf(this.localStorage.defaults.prefix)).length>this.qtyThreshold&&await this.sendExperiencesToRemote()}async sendExperiencesToRemote(){try{let e=await this.localStorage.readAll(),t=Object.values(e),r=Object.keys(e).filter(e=>0===e.indexOf(this.localStorage.defaults.prefix));r.length>0?(await this.remoteStorage.write(t),await this.localStorage.remove(r)):console.log("No data in local experience storage")}catch(e){return console.error(`Cannot send experiences to a remote server: ${e}`),e}}}class h{static write(e){return console.warn("This method should be implemented within a subclass and should never be called directly.  \n      If you see this message then something is probably goes wrong"),new Promise}}class d extends h{static write(e){return new Promise((t,r)=>{if(e)if(Array.isArray(e)){console.log("Experience sent to a remote server:");for(let t of e)console.log(t);t()}else r(new Error("experiences must be an array"));else r(new Error("experience cannot be empty"))})}}r.d(t,"Experience",function(){return n}),r.d(t,"Monitor",function(){return c}),r.d(t,"ObjectMonitor",function(){return u}),r.d(t,"Transporter",function(){return p}),r.d(t,"StorageAdapter",function(){return i}),r.d(t,"TestAdapter",function(){return d})},function(e,t){for(var r=[],n=0;n<256;++n)r[n]=(n+256).toString(16).substr(1);e.exports=function(e,t){var n=t||0,o=r;return o[e[n++]]+o[e[n++]]+o[e[n++]]+o[e[n++]]+"-"+o[e[n++]]+o[e[n++]]+"-"+o[e[n++]]+o[e[n++]]+"-"+o[e[n++]]+o[e[n++]]+"-"+o[e[n++]]+o[e[n++]]+o[e[n++]]+o[e[n++]]+o[e[n++]]+o[e[n++]]}},function(e,t){var r;r=function(){return this}();try{r=r||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){(function(t){var r,n=t.crypto||t.msCrypto;if(n&&n.getRandomValues){var o=new Uint8Array(16);r=function(){return n.getRandomValues(o),o}}if(!r){var s=new Array(16);r=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),s[t]=e>>>((3&t)<<3)&255;return s}}e.exports=r}).call(this,r(3))}])});